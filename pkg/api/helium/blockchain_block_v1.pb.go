// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: blockchain_block_v1.proto

package helium

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockchainSignatureV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer    []byte `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *BlockchainSignatureV1) Reset() {
	*x = BlockchainSignatureV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_block_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainSignatureV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainSignatureV1) ProtoMessage() {}

func (x *BlockchainSignatureV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_block_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainSignatureV1.ProtoReflect.Descriptor instead.
func (*BlockchainSignatureV1) Descriptor() ([]byte, []int) {
	return file_blockchain_block_v1_proto_rawDescGZIP(), []int{0}
}

func (x *BlockchainSignatureV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *BlockchainSignatureV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type BlockchainSeenVoteV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Vector []byte `protobuf:"bytes,2,opt,name=vector,proto3" json:"vector,omitempty"`
}

func (x *BlockchainSeenVoteV1) Reset() {
	*x = BlockchainSeenVoteV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_block_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainSeenVoteV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainSeenVoteV1) ProtoMessage() {}

func (x *BlockchainSeenVoteV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_block_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainSeenVoteV1.ProtoReflect.Descriptor instead.
func (*BlockchainSeenVoteV1) Descriptor() ([]byte, []int) {
	return file_blockchain_block_v1_proto_rawDescGZIP(), []int{1}
}

func (x *BlockchainSeenVoteV1) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BlockchainSeenVoteV1) GetVector() []byte {
	if x != nil {
		return x.Vector
	}
	return nil
}

type BlockchainBlockV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevHash         []byte                   `protobuf:"bytes,1,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	Height           uint64                   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Time             uint64                   `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	HbbftRound       uint64                   `protobuf:"varint,4,opt,name=hbbft_round,json=hbbftRound,proto3" json:"hbbft_round,omitempty"`
	Transactions     []*BlockchainTxn         `protobuf:"bytes,5,rep,name=transactions,proto3" json:"transactions,omitempty"` //TODO: needed to add helium namespace
	Signatures       []*BlockchainSignatureV1 `protobuf:"bytes,6,rep,name=signatures,proto3" json:"signatures,omitempty"`
	ElectionEpoch    uint64                   `protobuf:"varint,7,opt,name=election_epoch,json=electionEpoch,proto3" json:"election_epoch,omitempty"`
	EpochStart       uint64                   `protobuf:"varint,8,opt,name=epoch_start,json=epochStart,proto3" json:"epoch_start,omitempty"`
	RescueSignature  []byte                   `protobuf:"bytes,9,opt,name=rescue_signature,json=rescueSignature,proto3" json:"rescue_signature,omitempty"`
	SeenVotes        []*BlockchainSeenVoteV1  `protobuf:"bytes,10,rep,name=seen_votes,json=seenVotes,proto3" json:"seen_votes,omitempty"`
	BbaCompletion    []byte                   `protobuf:"bytes,11,opt,name=bba_completion,json=bbaCompletion,proto3" json:"bba_completion,omitempty"`
	SnapshotHash     []byte                   `protobuf:"bytes,12,opt,name=snapshot_hash,json=snapshotHash,proto3" json:"snapshot_hash,omitempty"`
	RescueSignatures [][]byte                 `protobuf:"bytes,13,rep,name=rescue_signatures,json=rescueSignatures,proto3" json:"rescue_signatures,omitempty"`
}

func (x *BlockchainBlockV1) Reset() {
	*x = BlockchainBlockV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_block_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainBlockV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainBlockV1) ProtoMessage() {}

func (x *BlockchainBlockV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_block_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainBlockV1.ProtoReflect.Descriptor instead.
func (*BlockchainBlockV1) Descriptor() ([]byte, []int) {
	return file_blockchain_block_v1_proto_rawDescGZIP(), []int{2}
}

func (x *BlockchainBlockV1) GetPrevHash() []byte {
	if x != nil {
		return x.PrevHash
	}
	return nil
}

func (x *BlockchainBlockV1) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockchainBlockV1) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *BlockchainBlockV1) GetHbbftRound() uint64 {
	if x != nil {
		return x.HbbftRound
	}
	return 0
}

func (x *BlockchainBlockV1) GetTransactions() []*BlockchainTxn {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *BlockchainBlockV1) GetSignatures() []*BlockchainSignatureV1 {
	if x != nil {
		return x.Signatures
	}
	return nil
}

func (x *BlockchainBlockV1) GetElectionEpoch() uint64 {
	if x != nil {
		return x.ElectionEpoch
	}
	return 0
}

func (x *BlockchainBlockV1) GetEpochStart() uint64 {
	if x != nil {
		return x.EpochStart
	}
	return 0
}

func (x *BlockchainBlockV1) GetRescueSignature() []byte {
	if x != nil {
		return x.RescueSignature
	}
	return nil
}

func (x *BlockchainBlockV1) GetSeenVotes() []*BlockchainSeenVoteV1 {
	if x != nil {
		return x.SeenVotes
	}
	return nil
}

func (x *BlockchainBlockV1) GetBbaCompletion() []byte {
	if x != nil {
		return x.BbaCompletion
	}
	return nil
}

func (x *BlockchainBlockV1) GetSnapshotHash() []byte {
	if x != nil {
		return x.SnapshotHash
	}
	return nil
}

func (x *BlockchainBlockV1) GetRescueSignatures() [][]byte {
	if x != nil {
		return x.RescueSignatures
	}
	return nil
}

var File_blockchain_block_v1_proto protoreflect.FileDescriptor

var file_blockchain_block_v1_proto_rawDesc = []byte{
	0x0a, 0x19, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x78, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x4f, 0x0a, 0x17, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x47, 0x0a, 0x17, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x76, 0x31, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x9a, 0x04, 0x0a, 0x13,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x76, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x68, 0x62, 0x62, 0x66, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x68, 0x62, 0x62, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3a, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x78, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x72,
	0x65, 0x73, 0x63, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x63, 0x75, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x76,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x76, 0x6f, 0x74,
	0x65, 0x5f, 0x76, 0x31, 0x52, 0x09, 0x73, 0x65, 0x65, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x62, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x62, 0x61, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x72,
	0x65, 0x73, 0x63, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x73, 0x63, 0x75, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blockchain_block_v1_proto_rawDescOnce sync.Once
	file_blockchain_block_v1_proto_rawDescData = file_blockchain_block_v1_proto_rawDesc
)

func file_blockchain_block_v1_proto_rawDescGZIP() []byte {
	file_blockchain_block_v1_proto_rawDescOnce.Do(func() {
		file_blockchain_block_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockchain_block_v1_proto_rawDescData)
	})
	return file_blockchain_block_v1_proto_rawDescData
}

var file_blockchain_block_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_blockchain_block_v1_proto_goTypes = []interface{}{
	(*BlockchainSignatureV1)(nil), // 0: blockchain_signature_v1
	(*BlockchainSeenVoteV1)(nil),  // 1: blockchain_seen_vote_v1
	(*BlockchainBlockV1)(nil),     // 2: blockchain_block_v1
	(*BlockchainTxn)(nil),         // 3: helium.blockchain_txn
}
var file_blockchain_block_v1_proto_depIdxs = []int32{
	3, // 0: blockchain_block_v1.transactions:type_name -> helium.blockchain_txn
	0, // 1: blockchain_block_v1.signatures:type_name -> blockchain_signature_v1
	1, // 2: blockchain_block_v1.seen_votes:type_name -> blockchain_seen_vote_v1
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_blockchain_block_v1_proto_init() }
func file_blockchain_block_v1_proto_init() {
	if File_blockchain_block_v1_proto != nil {
		return
	}
	file_blockchain_txn_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_blockchain_block_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainSignatureV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_block_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainSeenVoteV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_block_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainBlockV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockchain_block_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blockchain_block_v1_proto_goTypes,
		DependencyIndexes: file_blockchain_block_v1_proto_depIdxs,
		MessageInfos:      file_blockchain_block_v1_proto_msgTypes,
	}.Build()
	File_blockchain_block_v1_proto = out.File
	file_blockchain_block_v1_proto_rawDesc = nil
	file_blockchain_block_v1_proto_goTypes = nil
	file_blockchain_block_v1_proto_depIdxs = nil
}
