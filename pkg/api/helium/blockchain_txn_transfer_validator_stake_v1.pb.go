// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: blockchain_txn_transfer_validator_stake_v1.proto

package helium

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockchainTxnTransferValidatorStakeV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldAddress        []byte `protobuf:"bytes,1,opt,name=old_address,json=oldAddress,proto3" json:"old_address,omitempty"`
	NewAddress        []byte `protobuf:"bytes,2,opt,name=new_address,json=newAddress,proto3" json:"new_address,omitempty"`
	OldOwner          []byte `protobuf:"bytes,3,opt,name=old_owner,json=oldOwner,proto3" json:"old_owner,omitempty"`
	NewOwner          []byte `protobuf:"bytes,4,opt,name=new_owner,json=newOwner,proto3" json:"new_owner,omitempty"`
	OldOwnerSignature []byte `protobuf:"bytes,5,opt,name=old_owner_signature,json=oldOwnerSignature,proto3" json:"old_owner_signature,omitempty"`
	NewOwnerSignature []byte `protobuf:"bytes,6,opt,name=new_owner_signature,json=newOwnerSignature,proto3" json:"new_owner_signature,omitempty"`
	Fee               uint64 `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`
	StakeAmount       uint64 `protobuf:"varint,8,opt,name=stake_amount,json=stakeAmount,proto3" json:"stake_amount,omitempty"` // for accounting
	// optional amount (in bones) the new owner is transferring to the old owner
	PaymentAmount uint64 `protobuf:"varint,9,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
}

func (x *BlockchainTxnTransferValidatorStakeV1) Reset() {
	*x = BlockchainTxnTransferValidatorStakeV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_txn_transfer_validator_stake_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainTxnTransferValidatorStakeV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainTxnTransferValidatorStakeV1) ProtoMessage() {}

func (x *BlockchainTxnTransferValidatorStakeV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_txn_transfer_validator_stake_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainTxnTransferValidatorStakeV1.ProtoReflect.Descriptor instead.
func (*BlockchainTxnTransferValidatorStakeV1) Descriptor() ([]byte, []int) {
	return file_blockchain_txn_transfer_validator_stake_v1_proto_rawDescGZIP(), []int{0}
}

func (x *BlockchainTxnTransferValidatorStakeV1) GetOldAddress() []byte {
	if x != nil {
		return x.OldAddress
	}
	return nil
}

func (x *BlockchainTxnTransferValidatorStakeV1) GetNewAddress() []byte {
	if x != nil {
		return x.NewAddress
	}
	return nil
}

func (x *BlockchainTxnTransferValidatorStakeV1) GetOldOwner() []byte {
	if x != nil {
		return x.OldOwner
	}
	return nil
}

func (x *BlockchainTxnTransferValidatorStakeV1) GetNewOwner() []byte {
	if x != nil {
		return x.NewOwner
	}
	return nil
}

func (x *BlockchainTxnTransferValidatorStakeV1) GetOldOwnerSignature() []byte {
	if x != nil {
		return x.OldOwnerSignature
	}
	return nil
}

func (x *BlockchainTxnTransferValidatorStakeV1) GetNewOwnerSignature() []byte {
	if x != nil {
		return x.NewOwnerSignature
	}
	return nil
}

func (x *BlockchainTxnTransferValidatorStakeV1) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *BlockchainTxnTransferValidatorStakeV1) GetStakeAmount() uint64 {
	if x != nil {
		return x.StakeAmount
	}
	return 0
}

func (x *BlockchainTxnTransferValidatorStakeV1) GetPaymentAmount() uint64 {
	if x != nil {
		return x.PaymentAmount
	}
	return 0
}

var File_blockchain_txn_transfer_validator_stake_v1_proto protoreflect.FileDescriptor

var file_blockchain_txn_transfer_validator_stake_v1_proto_rawDesc = []byte{
	0x0a, 0x30, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x78, 0x6e,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x22, 0xe4, 0x02, 0x0a, 0x2a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x78, 0x6e, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x76, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6c, 0x64,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x6f, 0x6c, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65,
	0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x6c, 0x64, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x6f, 0x6c, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x65, 0x77,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x6c, 0x64, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x11, 0x6f, 0x6c, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blockchain_txn_transfer_validator_stake_v1_proto_rawDescOnce sync.Once
	file_blockchain_txn_transfer_validator_stake_v1_proto_rawDescData = file_blockchain_txn_transfer_validator_stake_v1_proto_rawDesc
)

func file_blockchain_txn_transfer_validator_stake_v1_proto_rawDescGZIP() []byte {
	file_blockchain_txn_transfer_validator_stake_v1_proto_rawDescOnce.Do(func() {
		file_blockchain_txn_transfer_validator_stake_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockchain_txn_transfer_validator_stake_v1_proto_rawDescData)
	})
	return file_blockchain_txn_transfer_validator_stake_v1_proto_rawDescData
}

var file_blockchain_txn_transfer_validator_stake_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_blockchain_txn_transfer_validator_stake_v1_proto_goTypes = []interface{}{
	(*BlockchainTxnTransferValidatorStakeV1)(nil), // 0: helium.blockchain_txn_transfer_validator_stake_v1
}
var file_blockchain_txn_transfer_validator_stake_v1_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_blockchain_txn_transfer_validator_stake_v1_proto_init() }
func file_blockchain_txn_transfer_validator_stake_v1_proto_init() {
	if File_blockchain_txn_transfer_validator_stake_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blockchain_txn_transfer_validator_stake_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainTxnTransferValidatorStakeV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockchain_txn_transfer_validator_stake_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blockchain_txn_transfer_validator_stake_v1_proto_goTypes,
		DependencyIndexes: file_blockchain_txn_transfer_validator_stake_v1_proto_depIdxs,
		MessageInfos:      file_blockchain_txn_transfer_validator_stake_v1_proto_msgTypes,
	}.Build()
	File_blockchain_txn_transfer_validator_stake_v1_proto = out.File
	file_blockchain_txn_transfer_validator_stake_v1_proto_rawDesc = nil
	file_blockchain_txn_transfer_validator_stake_v1_proto_goTypes = nil
	file_blockchain_txn_transfer_validator_stake_v1_proto_depIdxs = nil
}
