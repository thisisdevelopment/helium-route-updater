// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: service/mobile_config.proto

package mobile_config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminKeyRole int32

const (
	// administrative operator key
	AdminKeyRole_administrator AdminKeyRole = 0
	// routing infrastructure key for routing streams
	AdminKeyRole_router AdminKeyRole = 1
	// keys for verifying requests from other oracles
	AdminKeyRole_oracle AdminKeyRole = 2
	// carrier authorizing keys for signing mobile subscriber activity
	AdminKeyRole_carrier AdminKeyRole = 3
	// propagation calculation service of a mobile carrier
	AdminKeyRole_pcs AdminKeyRole = 4
)

// Enum value maps for AdminKeyRole.
var (
	AdminKeyRole_name = map[int32]string{
		0: "administrator",
		1: "router",
		2: "oracle",
		3: "carrier",
		4: "pcs",
	}
	AdminKeyRole_value = map[string]int32{
		"administrator": 0,
		"router":        1,
		"oracle":        2,
		"carrier":       3,
		"pcs":           4,
	}
)

func (x AdminKeyRole) Enum() *AdminKeyRole {
	p := new(AdminKeyRole)
	*p = x
	return p
}

func (x AdminKeyRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminKeyRole) Descriptor() protoreflect.EnumDescriptor {
	return file_service_mobile_config_proto_enumTypes[0].Descriptor()
}

func (AdminKeyRole) Type() protoreflect.EnumType {
	return &file_service_mobile_config_proto_enumTypes[0]
}

func (x AdminKeyRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminKeyRole.Descriptor instead.
func (AdminKeyRole) EnumDescriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{0}
}

type NetworkKeyRole int32

const (
	NetworkKeyRole_mobile_carrier NetworkKeyRole = 0
	NetworkKeyRole_mobile_router  NetworkKeyRole = 1
	// Keys from the Propagation Calculation Service
	NetworkKeyRole_mobile_pcs NetworkKeyRole = 2
)

// Enum value maps for NetworkKeyRole.
var (
	NetworkKeyRole_name = map[int32]string{
		0: "mobile_carrier",
		1: "mobile_router",
		2: "mobile_pcs",
	}
	NetworkKeyRole_value = map[string]int32{
		"mobile_carrier": 0,
		"mobile_router":  1,
		"mobile_pcs":     2,
	}
)

func (x NetworkKeyRole) Enum() *NetworkKeyRole {
	p := new(NetworkKeyRole)
	*p = x
	return p
}

func (x NetworkKeyRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkKeyRole) Descriptor() protoreflect.EnumDescriptor {
	return file_service_mobile_config_proto_enumTypes[1].Descriptor()
}

func (NetworkKeyRole) Type() protoreflect.EnumType {
	return &file_service_mobile_config_proto_enumTypes[1]
}

func (x NetworkKeyRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkKeyRole.Descriptor instead.
func (NetworkKeyRole) EnumDescriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{1}
}

type GatewayMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The res12 h3 index asserted address of the gateway as a string
	// where an unasserted gateway returns an empty string
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GatewayMetadata) Reset() {
	*x = GatewayMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayMetadata) ProtoMessage() {}

func (x *GatewayMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayMetadata.ProtoReflect.Descriptor instead.
func (*GatewayMetadata) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{0}
}

func (x *GatewayMetadata) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GatewayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key binary address and on-chain identity of the gateway
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The gateway metadata as recorded on the blockchain
	Metadata *GatewayMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GatewayInfo) Reset() {
	*x = GatewayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayInfo) ProtoMessage() {}

func (x *GatewayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayInfo.ProtoReflect.Descriptor instead.
func (*GatewayInfo) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{1}
}

func (x *GatewayInfo) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GatewayInfo) GetMetadata() *GatewayMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GatewayInfoReqV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key address of the gateway to look up
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// pubkey binary of the signing keypair
	Signer    []byte `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GatewayInfoReqV1) Reset() {
	*x = GatewayInfoReqV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayInfoReqV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayInfoReqV1) ProtoMessage() {}

func (x *GatewayInfoReqV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayInfoReqV1.ProtoReflect.Descriptor instead.
func (*GatewayInfoReqV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{2}
}

func (x *GatewayInfoReqV1) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GatewayInfoReqV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *GatewayInfoReqV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type GatewayInfoResV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GatewayInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// unix epoch timestamp in seconds
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// pubkey binary of the signing keypair
	Signer    []byte `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GatewayInfoResV1) Reset() {
	*x = GatewayInfoResV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayInfoResV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayInfoResV1) ProtoMessage() {}

func (x *GatewayInfoResV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayInfoResV1.ProtoReflect.Descriptor instead.
func (*GatewayInfoResV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{3}
}

func (x *GatewayInfoResV1) GetInfo() *GatewayInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GatewayInfoResV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GatewayInfoResV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *GatewayInfoResV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type GatewayInfoStreamReqV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// max number of gateway info records in each message of the response stream
	BatchSize uint32 `protobuf:"varint,1,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	// pubkey binary of the signing keypair
	Signer    []byte `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GatewayInfoStreamReqV1) Reset() {
	*x = GatewayInfoStreamReqV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayInfoStreamReqV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayInfoStreamReqV1) ProtoMessage() {}

func (x *GatewayInfoStreamReqV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayInfoStreamReqV1.ProtoReflect.Descriptor instead.
func (*GatewayInfoStreamReqV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{4}
}

func (x *GatewayInfoStreamReqV1) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *GatewayInfoStreamReqV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *GatewayInfoStreamReqV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type GatewayInfoStreamResV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a list of gateway info numbering up to the request batch size
	Gateways []*GatewayInfo `protobuf:"bytes,1,rep,name=gateways,proto3" json:"gateways,omitempty"`
	// unix epoch timestamp in seconds
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// pubkey binary of the signing keypair
	Signer    []byte `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GatewayInfoStreamResV1) Reset() {
	*x = GatewayInfoStreamResV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayInfoStreamResV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayInfoStreamResV1) ProtoMessage() {}

func (x *GatewayInfoStreamResV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayInfoStreamResV1.ProtoReflect.Descriptor instead.
func (*GatewayInfoStreamResV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{5}
}

func (x *GatewayInfoStreamResV1) GetGateways() []*GatewayInfo {
	if x != nil {
		return x.Gateways
	}
	return nil
}

func (x *GatewayInfoStreamResV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GatewayInfoStreamResV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *GatewayInfoStreamResV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type EntityVerifyReqV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// binary identifier of the entity
	EntityId []byte `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// pubkey binary of the requestor signing keypair
	Signer    []byte `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *EntityVerifyReqV1) Reset() {
	*x = EntityVerifyReqV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityVerifyReqV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityVerifyReqV1) ProtoMessage() {}

func (x *EntityVerifyReqV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityVerifyReqV1.ProtoReflect.Descriptor instead.
func (*EntityVerifyReqV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{6}
}

func (x *EntityVerifyReqV1) GetEntityId() []byte {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *EntityVerifyReqV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *EntityVerifyReqV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type EntityVerifyResV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unix epoch timestamp in seconds
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// pubkey binary of the requestor signing keypair
	Signer    []byte `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *EntityVerifyResV1) Reset() {
	*x = EntityVerifyResV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityVerifyResV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityVerifyResV1) ProtoMessage() {}

func (x *EntityVerifyResV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityVerifyResV1.ProtoReflect.Descriptor instead.
func (*EntityVerifyResV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{7}
}

func (x *EntityVerifyResV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EntityVerifyResV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *EntityVerifyResV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AuthorizationVerifyReqV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the pubkey binary of the authorized entity being verified
	Pubkey []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// the associated role being verified for the key
	Role NetworkKeyRole `protobuf:"varint,2,opt,name=role,proto3,enum=helium.mobile_config.NetworkKeyRole" json:"role,omitempty"`
	// pubkey binary of the signing keypair
	Signer []byte `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	// Signature over the request by the requesting oracle
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AuthorizationVerifyReqV1) Reset() {
	*x = AuthorizationVerifyReqV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationVerifyReqV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationVerifyReqV1) ProtoMessage() {}

func (x *AuthorizationVerifyReqV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationVerifyReqV1.ProtoReflect.Descriptor instead.
func (*AuthorizationVerifyReqV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{8}
}

func (x *AuthorizationVerifyReqV1) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *AuthorizationVerifyReqV1) GetRole() NetworkKeyRole {
	if x != nil {
		return x.Role
	}
	return NetworkKeyRole_mobile_carrier
}

func (x *AuthorizationVerifyReqV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *AuthorizationVerifyReqV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AuthorizationVerifyResV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unix epoch timestamp in seconds
	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// pubkey binary of the signing keypair
	Signer []byte `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
	// Signature over the response by the config service
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AuthorizationVerifyResV1) Reset() {
	*x = AuthorizationVerifyResV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationVerifyResV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationVerifyResV1) ProtoMessage() {}

func (x *AuthorizationVerifyResV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationVerifyResV1.ProtoReflect.Descriptor instead.
func (*AuthorizationVerifyResV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{9}
}

func (x *AuthorizationVerifyResV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AuthorizationVerifyResV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *AuthorizationVerifyResV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AuthorizationListReqV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// role of the keys being requested
	Role NetworkKeyRole `protobuf:"varint,1,opt,name=role,proto3,enum=helium.mobile_config.NetworkKeyRole" json:"role,omitempty"`
	// pubkey binary of the signing keypair
	Signer []byte `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
	// Signature over the request by the requesting oracle
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AuthorizationListReqV1) Reset() {
	*x = AuthorizationListReqV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationListReqV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationListReqV1) ProtoMessage() {}

func (x *AuthorizationListReqV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationListReqV1.ProtoReflect.Descriptor instead.
func (*AuthorizationListReqV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{10}
}

func (x *AuthorizationListReqV1) GetRole() NetworkKeyRole {
	if x != nil {
		return x.Role
	}
	return NetworkKeyRole_mobile_carrier
}

func (x *AuthorizationListReqV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *AuthorizationListReqV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AuthorizationListResV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of public key binaries of all registered entities by requested role
	Pubkeys [][]byte `protobuf:"bytes,1,rep,name=pubkeys,proto3" json:"pubkeys,omitempty"`
	// unix epoch timestamp in seconds
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// pubkey binary of the signing keypair
	Signer []byte `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	// Signature over the response by the config service
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AuthorizationListResV1) Reset() {
	*x = AuthorizationListResV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationListResV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationListResV1) ProtoMessage() {}

func (x *AuthorizationListResV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationListResV1.ProtoReflect.Descriptor instead.
func (*AuthorizationListResV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{11}
}

func (x *AuthorizationListResV1) GetPubkeys() [][]byte {
	if x != nil {
		return x.Pubkeys
	}
	return nil
}

func (x *AuthorizationListResV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AuthorizationListResV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *AuthorizationListResV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AdminAddKeyReqV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkey []byte       `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Role   AdminKeyRole `protobuf:"varint,2,opt,name=role,proto3,enum=helium.mobile_config.AdminKeyRole" json:"role,omitempty"`
	// unix epoch timestamp in seconds
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// pubkey binary of the signing keypair
	Signer []byte `protobuf:"bytes,4,opt,name=signer,proto3" json:"signer,omitempty"`
	// Signature of the request message signed by an admin key
	// already registered to the config service
	Signature []byte `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AdminAddKeyReqV1) Reset() {
	*x = AdminAddKeyReqV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAddKeyReqV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAddKeyReqV1) ProtoMessage() {}

func (x *AdminAddKeyReqV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAddKeyReqV1.ProtoReflect.Descriptor instead.
func (*AdminAddKeyReqV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{12}
}

func (x *AdminAddKeyReqV1) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *AdminAddKeyReqV1) GetRole() AdminKeyRole {
	if x != nil {
		return x.Role
	}
	return AdminKeyRole_administrator
}

func (x *AdminAddKeyReqV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AdminAddKeyReqV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *AdminAddKeyReqV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AdminRemoveKeyReqV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkey []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// unix epoch timestamp in seconds
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// pubkey binary of the signing keypair
	Signer []byte `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	// Signature of the request message signed by an admin key
	// already registered to the config service
	Signature []byte       `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	Role      AdminKeyRole `protobuf:"varint,5,opt,name=role,proto3,enum=helium.mobile_config.AdminKeyRole" json:"role,omitempty"`
}

func (x *AdminRemoveKeyReqV1) Reset() {
	*x = AdminRemoveKeyReqV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRemoveKeyReqV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRemoveKeyReqV1) ProtoMessage() {}

func (x *AdminRemoveKeyReqV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRemoveKeyReqV1.ProtoReflect.Descriptor instead.
func (*AdminRemoveKeyReqV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{13}
}

func (x *AdminRemoveKeyReqV1) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *AdminRemoveKeyReqV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AdminRemoveKeyReqV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *AdminRemoveKeyReqV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AdminRemoveKeyReqV1) GetRole() AdminKeyRole {
	if x != nil {
		return x.Role
	}
	return AdminKeyRole_administrator
}

type AdminKeyResV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unix epoch timestamp in seconds
	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// pubkey binary of the signing keypair
	Signer []byte `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
	// Signature over the response by the config service
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AdminKeyResV1) Reset() {
	*x = AdminKeyResV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_mobile_config_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminKeyResV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminKeyResV1) ProtoMessage() {}

func (x *AdminKeyResV1) ProtoReflect() protoreflect.Message {
	mi := &file_service_mobile_config_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminKeyResV1.ProtoReflect.Descriptor instead.
func (*AdminKeyResV1) Descriptor() ([]byte, []int) {
	return file_service_mobile_config_proto_rawDescGZIP(), []int{14}
}

func (x *AdminKeyResV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AdminKeyResV1) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *AdminKeyResV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_service_mobile_config_proto protoreflect.FileDescriptor

var file_service_mobile_config_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x68,
	0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x2e, 0x0a, 0x10, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x0c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x42, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x65, 0x0a, 0x13, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x31,
	0x12, 0x36, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x71, 0x0a, 0x1a,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0xb0, 0x01, 0x0a, 0x1a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x12, 0x3e,
	0x0a, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x69, 0x0a, 0x14, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x6a, 0x0a,
	0x14, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x72,
	0x65, 0x73, 0x5f, 0x76, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x1b, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65,
	0x79, 0x12, 0x3a, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x71, 0x0a, 0x1b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x5f,
	0x76, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x19, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x5f, 0x76, 0x31, 0x12, 0x3a, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x19, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x5f, 0x76, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x64, 0x64,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0x66, 0x0a, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2a, 0x51, 0x0a, 0x0e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x11, 0x0a,
	0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x63, 0x73, 0x10, 0x04, 0x2a, 0x49,
	0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x5f, 0x70, 0x63, 0x73, 0x10, 0x02, 0x32, 0xdc, 0x01, 0x0a, 0x07, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x5c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e,
	0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x1a, 0x29, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75,
	0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73,
	0x5f, 0x76, 0x31, 0x12, 0x73, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x30, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65,
	0x71, 0x5f, 0x76, 0x31, 0x1a, 0x30, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x72, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x30, 0x01, 0x32, 0x6a, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x60, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x2a, 0x2e, 0x68,
	0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x1a, 0x2a, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75,
	0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65,
	0x73, 0x5f, 0x76, 0x31, 0x32, 0xe9, 0x01, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x12, 0x31, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x71,
	0x5f, 0x76, 0x31, 0x1a, 0x31, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f,
	0x72, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x12, 0x68, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2f,
	0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x1a,
	0x2f, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x31,
	0x32, 0xcb, 0x01, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x76,
	0x31, 0x1a, 0x26, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x12, 0x63, 0x0a, 0x0a, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x72, 0x65, 0x71, 0x5f, 0x76, 0x31, 0x1a, 0x26, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_mobile_config_proto_rawDescOnce sync.Once
	file_service_mobile_config_proto_rawDescData = file_service_mobile_config_proto_rawDesc
)

func file_service_mobile_config_proto_rawDescGZIP() []byte {
	file_service_mobile_config_proto_rawDescOnce.Do(func() {
		file_service_mobile_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_mobile_config_proto_rawDescData)
	})
	return file_service_mobile_config_proto_rawDescData
}

var file_service_mobile_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_service_mobile_config_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_service_mobile_config_proto_goTypes = []interface{}{
	(AdminKeyRole)(0),                // 0: helium.mobile_config.admin_key_role
	(NetworkKeyRole)(0),              // 1: helium.mobile_config.network_key_role
	(*GatewayMetadata)(nil),          // 2: helium.mobile_config.gateway_metadata
	(*GatewayInfo)(nil),              // 3: helium.mobile_config.gateway_info
	(*GatewayInfoReqV1)(nil),         // 4: helium.mobile_config.gateway_info_req_v1
	(*GatewayInfoResV1)(nil),         // 5: helium.mobile_config.gateway_info_res_v1
	(*GatewayInfoStreamReqV1)(nil),   // 6: helium.mobile_config.gateway_info_stream_req_v1
	(*GatewayInfoStreamResV1)(nil),   // 7: helium.mobile_config.gateway_info_stream_res_v1
	(*EntityVerifyReqV1)(nil),        // 8: helium.mobile_config.entity_verify_req_v1
	(*EntityVerifyResV1)(nil),        // 9: helium.mobile_config.entity_verify_res_v1
	(*AuthorizationVerifyReqV1)(nil), // 10: helium.mobile_config.authorization_verify_req_v1
	(*AuthorizationVerifyResV1)(nil), // 11: helium.mobile_config.authorization_verify_res_v1
	(*AuthorizationListReqV1)(nil),   // 12: helium.mobile_config.authorization_list_req_v1
	(*AuthorizationListResV1)(nil),   // 13: helium.mobile_config.authorization_list_res_v1
	(*AdminAddKeyReqV1)(nil),         // 14: helium.mobile_config.admin_add_key_req_v1
	(*AdminRemoveKeyReqV1)(nil),      // 15: helium.mobile_config.admin_remove_key_req_v1
	(*AdminKeyResV1)(nil),            // 16: helium.mobile_config.admin_key_res_v1
}
var file_service_mobile_config_proto_depIdxs = []int32{
	2,  // 0: helium.mobile_config.gateway_info.metadata:type_name -> helium.mobile_config.gateway_metadata
	3,  // 1: helium.mobile_config.gateway_info_res_v1.info:type_name -> helium.mobile_config.gateway_info
	3,  // 2: helium.mobile_config.gateway_info_stream_res_v1.gateways:type_name -> helium.mobile_config.gateway_info
	1,  // 3: helium.mobile_config.authorization_verify_req_v1.role:type_name -> helium.mobile_config.network_key_role
	1,  // 4: helium.mobile_config.authorization_list_req_v1.role:type_name -> helium.mobile_config.network_key_role
	0,  // 5: helium.mobile_config.admin_add_key_req_v1.role:type_name -> helium.mobile_config.admin_key_role
	0,  // 6: helium.mobile_config.admin_remove_key_req_v1.role:type_name -> helium.mobile_config.admin_key_role
	4,  // 7: helium.mobile_config.gateway.info:input_type -> helium.mobile_config.gateway_info_req_v1
	6,  // 8: helium.mobile_config.gateway.info_stream:input_type -> helium.mobile_config.gateway_info_stream_req_v1
	8,  // 9: helium.mobile_config.entity.verify:input_type -> helium.mobile_config.entity_verify_req_v1
	10, // 10: helium.mobile_config.authorization.verify:input_type -> helium.mobile_config.authorization_verify_req_v1
	12, // 11: helium.mobile_config.authorization.list:input_type -> helium.mobile_config.authorization_list_req_v1
	14, // 12: helium.mobile_config.admin.add_key:input_type -> helium.mobile_config.admin_add_key_req_v1
	15, // 13: helium.mobile_config.admin.remove_key:input_type -> helium.mobile_config.admin_remove_key_req_v1
	5,  // 14: helium.mobile_config.gateway.info:output_type -> helium.mobile_config.gateway_info_res_v1
	7,  // 15: helium.mobile_config.gateway.info_stream:output_type -> helium.mobile_config.gateway_info_stream_res_v1
	9,  // 16: helium.mobile_config.entity.verify:output_type -> helium.mobile_config.entity_verify_res_v1
	11, // 17: helium.mobile_config.authorization.verify:output_type -> helium.mobile_config.authorization_verify_res_v1
	13, // 18: helium.mobile_config.authorization.list:output_type -> helium.mobile_config.authorization_list_res_v1
	16, // 19: helium.mobile_config.admin.add_key:output_type -> helium.mobile_config.admin_key_res_v1
	16, // 20: helium.mobile_config.admin.remove_key:output_type -> helium.mobile_config.admin_key_res_v1
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_service_mobile_config_proto_init() }
func file_service_mobile_config_proto_init() {
	if File_service_mobile_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_mobile_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayInfoReqV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayInfoResV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayInfoStreamReqV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayInfoStreamResV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityVerifyReqV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityVerifyResV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationVerifyReqV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationVerifyResV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationListReqV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationListResV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAddKeyReqV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRemoveKeyReqV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_mobile_config_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminKeyResV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_mobile_config_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_service_mobile_config_proto_goTypes,
		DependencyIndexes: file_service_mobile_config_proto_depIdxs,
		EnumInfos:         file_service_mobile_config_proto_enumTypes,
		MessageInfos:      file_service_mobile_config_proto_msgTypes,
	}.Build()
	File_service_mobile_config_proto = out.File
	file_service_mobile_config_proto_rawDesc = nil
	file_service_mobile_config_proto_goTypes = nil
	file_service_mobile_config_proto_depIdxs = nil
}
